{
  "required": [
    "PREFERRED_URL_SCHEME",
    "SERVER_HOSTNAME",
    "DB_URI",
    "AUTHENTICATION_TYPE",
    "DISTRIBUTED_STORAGE_CONFIG",
    "BUILDLOGS_REDIS",
    "USER_EVENTS_REDIS",
    "DISTRIBUTED_STORAGE_PREFERENCE",
    "DEFAULT_TAG_EXPIRATION",
    "TAG_EXPIRATION_OPTIONS"
  ],
  "type": "object",
  "description": "Schema for Quay configuration",
  "properties": {
    "REPO_MIRROR_TLS_VERIFY": {
      "x-example": true,
      "type": "boolean",
      "description": "Require HTTPS and verify certificates of Quay registry during mirror. Defaults to True"
    },
    "DISTRIBUTED_STORAGE_DEFAULT_LOCATIONS": {
      "items": { "uniqueItems": true, "type": "string" },
      "type": "array",
      "description": "The list of storage engine(s) (by ID in DISTRIBUTED_STORAGE_CONFIG) whose images should be fully replicated, by default, to all other storage engines.",
      "x-example": ["s3_us_east", "s3_us_west"]
    },
    "FEATURE_REPO_MIRROR": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether to enable support for repository mirroring. Defaults to False"
    },
    "FEATURE_BLACKLISTED_EMAILS": {
      "x-example": false,
      "type": "boolean",
      "description": "If set to true, no new User accounts may be created if their email domain is blacklisted."
    },
    "REGISTRY_STATE": {
      "x-example": "readonly",
      "enum": ["normal", "readonly"],
      "type": "string",
      "description": "The state of the registry."
    },
    "FEATURE_REQUIRE_ENCRYPTED_BASIC_AUTH": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether non-encrypted passwords (as opposed to encrypted tokens) can be used for basic auth. Defaults to False"
    },
    "FEATURE_USER_LOG_ACCESS": {
      "x-example": true,
      "type": "boolean",
      "description": "If set to true, users will have access to audit logs for their namespace. Defaults to False"
    },
    "ENABLE_HEALTH_DEBUG_SECRET": {
      "x-example": "somesecrethere",
      "type": ["string", "null"],
      "description": "If specified, a secret that can be given to health endpoints to see full debug info whennot authenticated as a superuser"
    },
    "FEATURE_STORAGE_REPLICATION": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether to automatically replicate between storage engines. Defaults to False"
    },
    "FEATURE_REQUIRE_TEAM_INVITE": {
      "x-example": true,
      "type": "boolean",
      "description": "Whether to require invitations when adding a user to a team. Defaults to True"
    },
    "USERFILES_LOCATION": {
      "x-example": "s3_us_east",
      "type": "string",
      "description": "ID of the storage engine in which to place user-uploaded files"
    },
    "DISTRIBUTED_STORAGE_PREFERENCE": {
      "items": { "uniqueItems": true, "type": "string" },
      "type": "array",
      "description": "The preferred storage engine(s) (by ID in DISTRIBUTED_STORAGE_CONFIG) to use. A preferred engine means it is first checked for pullig and images are pushed to it.",
      "x-example": ["s3_us_east", "s3_us_west"]
    },
    "FEATURE_LIBRARY_SUPPORT": {
      "x-example": true,
      "type": "boolean",
      "description": "Whether to allow for \"namespace-less\" repositories when pulling and pushing from Docker. Defaults to True"
    },
    "FEATURE_SUPER_USERS": {
      "x-example": true,
      "type": "boolean",
      "description": "Whether super users are supported. Defaults to True"
    },
    "FEATURE_GARBAGE_COLLECTION": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether garbage collection of repositories is enabled. Defaults to True"
    },

    "FEATURE_PUBLIC_CATALOG": {
      "x-example": false,
      "type": "boolean",
      "description": "If set to true, the _catalog endpoint returns public repositories. Otherwise, only private repositories can be returned. Defaults to False"
    },
    "LOGS_MODEL": {
      "x-example": "database",
      "enum": ["database", "transition_reads_both_writes_es", "elasticsearch"],
      "type": "string",
      "description": "Logs model for action logs"
    },
    "RECAPTCHA_SECRET_KEY": {
      "type": ["string", "null"],
      "description": "If recaptcha is enabled, the secret key for the Recaptcha service"
    },
    "FEATURE_ACI_CONVERSION": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether to enable conversion to ACIs. Defaults to False"
    },
    "GITLAB_TRIGGER_CONFIG": {
      "required": ["GITLAB_ENDPOINT", "CLIENT_ID", "CLIENT_SECRET"],
      "type": ["object", "null"],
      "description": "Configuration for using Gitlab (Enterprise) for external authentication",
      "properties": {
        "CLIENT_SECRET": {
          "x-example": "e4a58ddd3d7408b7aec109e85564a0d153d3e846",
          "type": "string",
          "description": "The registered client secret for this Quay instance"
        },
        "GITLAB_ENDPOINT": {
          "x-example": "https://gitlab.com",
          "type": "string",
          "description": "The endpoint at which Gitlab(Enterprise) is running"
        },
        "CLIENT_ID": {
          "x-example": "0e8dbe15c4c7630b6780",
          "type": "string",
          "description": "The registered client ID for this Quay instance"
        }
      }
    },
    "FEATURE_USER_LAST_ACCESSED": {
      "x-example": true,
      "type": "boolean",
      "description": "Whether to record the last time a user was accessed. Defaults to True"
    },
    "BITBUCKET_TRIGGER_CONFIG": {
      "properties": {
        "CONSUMER_SECRET": {
          "x-example": "e4a58ddd3d7408b7aec109e85564a0d153d3e846",
          "type": "string",
          "description": "The registered consumer secret (client secret) for this Quay instance"
        },
        "CONSUMER_KEY": {
          "x-example": "0e8dbe15c4c7630b6780",
          "type": "string",
          "description": "The registered consumer key (client ID) for this Quay instance"
        }
      },
      "required": ["CONSUMER_KEY", "CONSUMER_SECRET"],
      "type": ["object", "null"],
      "description": "Configuration for using BitBucket for build triggers",
      "x-reference": "https://coreos.com/quay-enterprise/docs/latest/bitbucket-build.html"
    },
    "FEATURE_USERNAME_CONFIRMATION": {
      "x-example": false,
      "type": "boolean",
      "description": "If set to true, users can confirm their generated usernames. Defaults to True"
    },
    "FEATURE_SECURITY_NOTIFICATIONS": {
      "x-example": false,
      "type": "boolean",
      "description": "If the security scanner is enabled, whether to turn of/off security notificaitons. Defaults to False"
    },
    "EXPIRED_APP_SPECIFIC_TOKEN_GC": {
      "pattern": "^[0-9]+(w|m|d|h|s)$",
      "type": ["string", "null"],
      "description": "Duration of time expired external app tokens will remain before being garbage collected. Defaults to 1d."
    },
    "FEATURE_ANONYMOUS_ACCESS": {
      "x-example": true,
      "type": "boolean",
      "description": " Whether to allow anonymous users to browse and pull public repositories. Defaults to True"
    },
    "BLACKLISTED_EMAIL_DOMAINS": {
      "x-example": ["example.com", "example.org"],
      "type": "array",
      "description": "The array of email-address domains that is used if FEATURE_BLACKLISTED_EMAILS is set to true."
    },

    "FEATURE_APP_REGISTRY": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether to enable support for App repositories. Defaults to False"
    },
    "V2_PAGINATION_SIZE": {
      "x-example": 100,
      "type": "number",
      "description": "The number of results returned per page in V2 registry APIs"
    },
    "PROMETHEUS_NAMESPACE": {
      "x-example": "myregistry",
      "type": "string",
      "description": "The prefix applied to all exposed Prometheus metrics. Defaults to `quay`"
    },
    "PREFERRED_URL_SCHEME": {
      "x-example": "https",
      "enum": ["http", "https"],
      "type": "string",
      "description": "The URL scheme to use when hitting Quay. If Quay is behind SSL *at all*, this *must* be `https`"
    },
    "FEATURE_USER_RENAME": {
      "x-example": true,
      "type": "boolean",
      "description": "If set to true, users can rename their own namespace. Defaults to False"
    },
    "SUCCESSIVE_TRIGGER_FAILURE_DISABLE_THRESHOLD": {
      "x-example": 50,
      "type": ["number", "null"],
      "description": "If not None, the number of successive failures that can occur before a build trigger is automatically disabled. Defaults to 100."
    },
    "FEATURE_READER_BUILD_LOGS": {
      "x-example": false,
      "type": "boolean",
      "description": "If set to true, build logs may be read by those with read access to the repo, rather than only write access or admin access. Defaults to False"
    },
    "SSL_PROTOCOLS": {
      "x-example": ["TLSv1.1", "TLSv1.2"],
      "type": "array",
      "description": "If specified, the nginx-defined list of SSL protocols to enabled and disabled",
      "x-reference": "http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_protocols"
    },
    "WEBHOOK_HOSTNAME_BLACKLIST": {
      "x-example": ["somexternaldomain.com"],
      "type": "array",
      "description": "The set of hostnames to disallow from webhooks when validating, beyond localhost"
    },
    "EXTERNAL_TLS_TERMINATION": {
      "x-example": true,
      "type": "boolean",
      "description": "If TLS is supported, but terminated at a layer before Quay, must be true."
    },
    "DB_CONNECTION_ARGS": {
      "required": ["threadlocals", "autorollback"],
      "type": "object",
      "description": "If specified, connection arguments for the database such as timeouts and SSL.",
      "properties": {
        "ssl": {
          "required": ["ca"],
          "type": "object",
          "description": "SSL connection configuration",
          "properties": {
            "ca": {
              "x-example": "conf/stack/ssl-ca-cert.pem",
              "type": "string",
              "description": "*Absolute container path* to the CA certificate to use for SSL connections"
            }
          }
        },
        "threadlocals": {
          "type": "boolean",
          "description": "Whether to use thread-local connections. Should *ALWAYS* be `true`"
        },
        "autorollback": {
          "type": "boolean",
          "description": "Whether to use auto-rollback connections. Should *ALWAYS* be `true`"
        }
      }
    },
    "APP_SPECIFIC_TOKEN_EXPIRATION": {
      "pattern": "^[0-9]+(w|m|d|h|s)$",
      "type": ["string", "null"],
      "description": "The expiration for external app tokens. Defaults to None."
    },
    "FEATURE_USER_METADATA": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether to collect and support user metadata. Defaults to False"
    },
    "SERVER_HOSTNAME": {
      "x-example": "quay.io",
      "type": "string",
      "description": "The URL at which Quay is accessible, without the scheme."
    },
    "BROWSER_API_CALLS_XHR_ONLY": {
      "x-example": false,
      "type": "boolean",
      "description": "If enabled, only API calls marked as being made by an XHR will be allowed from browsers. Defaults to True."
    },
    "SESSION_COOKIE_SECURE": {
      "x-example": true,
      "type": "boolean",
      "description": "Whether the `secure` property should be set on session cookies. Defaults to False. Recommended to be True for all installations using SSL.",
      "x-reference": "https://en.wikipedia.org/wiki/Secure_cookies"
    },
    "FEATURE_RECAPTCHA": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether Recaptcha is necessary for user login and recovery. Defaults to False",
      "x-reference": "https://www.google.com/recaptcha/intro/"
    },
    "FEATURE_AGGREGATED_LOG_COUNT_RETRIEVAL": {
      "x-example": true,
      "type": "boolean",
      "description": "Whether to allow retrieval of aggregated log counts. Defaults to True"
    },
    "SUCCESSIVE_TRIGGER_INTERNAL_ERROR_DISABLE_THRESHOLD": {
      "x-example": 10,
      "type": ["number", "null"],
      "description": "If not None, the number of successive internal errors that can occur before a build trigger is automatically disabled. Defaults to 5."
    },
    "REPO_MIRROR_INTERVAL": {
      "x-example": 30,
      "type": "number",
      "description": "The number of seconds between checking for repository mirror candidates. Defaults to 30."
    },
    "MAIL_PASSWORD": {
      "x-example": "mypassword",
      "type": ["string", "null"],
      "description": "The SMTP password to use when sending e-mails."
    },
    "DB_URI": {
      "x-example": "mysql+pymysql://username:password@dns.of.database/quay",
      "type": "string",
      "description": "The URI at which to access the database, including any credentials.",
      "x-reference": "https://www.postgresql.org/docs/9.3/static/libpq-connect.html#AEN39495"
    },
    "MAIL_PORT": {
      "x-example": 588,
      "type": "number",
      "description": "The SMTP port to use. If not specified, defaults to 587."
    },
    "FEATURE_LOG_EXPORT": {
      "x-example": true,
      "type": "boolean",
      "description": "Whether to allow exporting of action logs. Defaults to True"
    },
    "FEATURE_MAILING": {
      "x-example": true,
      "type": "boolean",
      "description": "Whether emails are enabled. Defaults to True"
    },
    "LOGS_MODEL_CONFIG": {
      "properties": {
        "elasticsearch_config": {
          "type": "object",
          "description": "Elasticsearch cluster configuration",
          "properties": {
            "access_key": {
              "x-example": "some_string",
              "type": "string",
              "description": "Elasticsearch user (or IAM key for AWS ES)"
            },
            "host": {
              "x-example": "host.elasticsearch.example",
              "type": "string",
              "description": "Elasticsearch cluster endpoint"
            },
            "index_prefix": {
              "x-example": "logentry_",
              "type": "string",
              "description": "Elasticsearch's index prefix"
            },
            "index_settings": {
              "type": "object",
              "description": "Elasticsearch's index settings"
            },
            "use_ssl": {
              "x-example": true,
              "type": "boolean",
              "description": "Use ssl for Elasticsearch. Defaults to True"
            },
            "secret_key": {
              "x-example": "some_secret_string",
              "type": "string",
              "description": "Elasticsearch password (or IAM secret for AWS ES)"
            },
            "aws_region": {
              "x-example": "us-east-1",
              "type": "string",
              "description": "Amazon web service region"
            },
            "port": {
              "x-example": 1234,
              "type": "number",
              "description": "Elasticsearch cluster endpoint port"
            }
          }
        },
        "kinesis_stream_config": {
          "type": "object",
          "description": "AWS Kinesis Stream configuration",
          "properties": {
            "aws_secret_key": {
              "x-example": "some_secret_key",
              "type": "string",
              "description": "AWS secret key"
            },
            "stream_name": {
              "x-example": "logentry-kinesis-stream",
              "type": "string",
              "description": "Kinesis stream to send action logs to"
            },
            "aws_access_key": {
              "x-example": "some_access_key",
              "type": "string",
              "description": "AWS access key"
            },
            "retries": {
              "x-example": 5,
              "type": "number",
              "description": "Max number of attempts made on a single request"
            },
            "read_timeout": {
              "x-example": 5,
              "type": "number",
              "description": "Number of seconds before timeout when reading from a connection"
            },
            "max_pool_connections": {
              "x-example": 10,
              "type": "number",
              "description": "The maximum number of connections to keep in a connection pool"
            },
            "aws_region": {
              "x-example": "us-east-1",
              "type": "string",
              "description": "AWS region"
            },
            "connect_timeout": {
              "x-example": 5,
              "type": "number",
              "description": "Number of seconds before timeout when attempting to make a connection"
            }
          }
        },
        "producer": {
          "x-example": "kafka",
          "enum": ["kafka", "elasticsearch", "kinesis_stream"],
          "type": "string",
          "description": "Logs producer if logging to Elasticsearch"
        },
        "kafka_config": {
          "type": "object",
          "description": "Kafka cluster configuration",
          "properties": {
            "topic": {
              "x-example": "logentry",
              "type": "string",
              "description": "Kafka topic to publish log entries to"
            },
            "bootstrap_servers": {
              "uniqueItems": true,
              "items": { "type": "string" },
              "type": "array",
              "description": "List of Kafka brokers to bootstrap the client from"
            },
            "max_block_seconds": {
              "x-example": 10,
              "type": "number",
              "description": "Max number of seconds to block during a `send()`, either because the buffer is full or metadata unavailable"
            }
          }
        }
      },
      "type": "object",
      "description": "Logs model config for action logs",
      "x-reference": "https://www.elastic.co/guide/en/elasticsearch/guide/master/_index_settings.html"
    },
    "ACTION_LOG_ROTATION_THRESHOLD": {
      "x-example": "30d",
      "type": "string",
      "description": "If action log archiving is enabled, the time interval after which to archive data."
    },
    "FEATURE_PERMANENT_SESSIONS": {
      "x-example": true,
      "type": "boolean",
      "description": "Whether sessions are permanent. Defaults to True"
    },
    "MAIL_DEFAULT_SENDER": {
      "x-example": "support@myco.com",
      "type": ["string", "null"],
      "description": "If specified, the e-mail address used as the `from` when Quay sends e-mails. If none, defaults to `support@quay.io`."
    },
    "TAG_EXPIRATION_OPTIONS": {
      "items": { "pattern": "^[0-9]+(w|m|d|h|s)$", "type": "string" },
      "type": "array",
      "description": "The options that users can select for expiration of tags in their namespace (if enabled)"
    },
    "MAXIMUM_LAYER_SIZE": {
      "x-example": "100G",
      "type": "string",
      "description": "Maximum allowed size of an image layer. Defaults to 20G",
      "pattern": "^[0-9]+(G|M)$"
    },
    "FEATURE_GITHUB_BUILD": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether to support GitHub build triggers. Defaults to False"
    },
    "SUPER_USERS": {
      "uniqueItems": true,
      "items": { "type": "string" },
      "type": "array",
      "description": "Quay usernames of those users to be granted superuser privileges"
    },
    "MAIL_USERNAME": {
      "x-example": "myuser",
      "type": ["string", "null"],
      "description": "The SMTP username to use when sending e-mails."
    },
    "FEATURE_ADVERTISE_V2": {
      "x-example": true,
      "type": "boolean",
      "description": "Whether the v2/ endpoint is visible. Defaults to True"
    },
    "FEATURE_BITBUCKET_BUILD": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether to support Bitbucket build triggers. Defaults to False"
    },
    "USER_RECOVERY_TOKEN_LIFETIME": {
      "x-example": "10m",
      "type": "string",
      "description": "The length of time a token for recovering a user accounts is valid. Defaults to 30m.",
      "pattern": "^[0-9]+(w|m|d|h|s)$"
    },
    "FRESH_LOGIN_TIMEOUT": {
      "x-example": "5m",
      "type": "string",
      "description": "The time after which a fresh login requires users to reenter their password"
    },
    "USERFILES_PATH": {
      "x-example": "userfiles",
      "type": "string",
      "description": "Path under storage in which to place user-uploaded files"
    },
    "BLACKLIST_V2_SPEC": {
      "x-example": "<1.8.0",
      "type": "string",
      "description": "The Docker CLI versions to which Quay will respond that V2 is *unsupported*. Defaults to `<1.6.0`",
      "x-reference": "http://pythonhosted.org/semantic_version/reference.html#semantic_version.Spec"
    },
    "RECAPTCHA_SITE_KEY": {
      "type": ["string", "null"],
      "description": "If recaptcha is enabled, the site key for the Recaptcha service"
    },
    "FEATURE_RESTRICTED_V1_PUSH": {
      "x-example": false,
      "type": "boolean",
      "description": "If set to true, only namespaces listed in V1_PUSH_WHITELIST support V1 push. Defaults to True"
    },
    "ALLOW_PULLS_WITHOUT_STRICT_LOGGING": {
      "x-example": true,
      "type": "boolean",
      "description": "If true, pulls in which the pull audit log entry cannot be written will still succeed. Useful if the database can fallback into a read-only state and it is desired for pulls to continue during that time. Defaults to False."
    },
    "MAIL_USE_TLS": {
      "x-example": true,
      "type": "boolean",
      "description": "If specified, whether to use TLS for sending e-mails."
    },
    "LOG_ARCHIVE_PATH": {
      "x-example": "archives/buildlogs",
      "type": "string",
      "description": "If builds are enabled, the path in storage in which to place the archived build logs."
    },
    "V1_PUSH_WHITELIST": {
      "x-example": ["some", "namespaces"],
      "type": "array",
      "description": "The array of namespace names that support V1 push if FEATURE_RESTRICTED_V1_PUSH is set to true."
    },
    "FEATURE_PROXY_STORAGE": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether to proxy all direct download URLs in storage via the registry nginx. Defaults to False"
    },
    "DEFAULT_NAMESPACE_MAXIMUM_BUILD_COUNT": {
      "x-example": 20,
      "type": ["number", "null"],
      "description": "If not None, the default maximum number of builds that can be queued in a namespace."
    },
    "FEATURE_BUILD_SUPPORT": {
      "x-example": true,
      "type": "boolean",
      "description": "Whether to support Dockerfile build. Defaults to True"
    },
    "GITHUB_TRIGGER_CONFIG": {
      "properties": {
        "API_ENDPOINT": {
          "x-example": "https://api.github.com/",
          "type": "string",
          "description": "The endpoint of the GitHub (Enterprise) API to use. Must be overridden for github.com"
        },
        "CLIENT_SECRET": {
          "x-example": "e4a58ddd3d7408b7aec109e85564a0d153d3e846",
          "type": "string",
          "description": "The registered client secret for this Quay instance",
          "x-reference": "https://coreos.com/quay-enterprise/docs/latest/github-app.html"
        },
        "GITHUB_ENDPOINT": {
          "x-example": "https://github.com/",
          "type": "string",
          "description": "The endpoint of the GitHub (Enterprise) being hit"
        },
        "CLIENT_ID": {
          "x-example": "0e8dbe15c4c7630b6780",
          "type": "string",
          "description": "The registered client ID for this Quay instance; cannot be shared with GITHUB_LOGIN_CONFIG",
          "x-reference": "https://coreos.com/quay-enterprise/docs/latest/github-app.html"
        }
      },
      "required": ["GITHUB_ENDPOINT", "CLIENT_ID", "CLIENT_SECRET"],
      "type": ["object", "null"],
      "description": "Configuration for using GitHub (Enterprise) for build triggers",
      "x-reference": "https://coreos.com/quay-enterprise/docs/latest/github-build.html"
    },
    "FEATURE_PARTIAL_USER_AUTOCOMPLETE": {
      "x-example": true,
      "type": "boolean",
      "description": "If set to true, autocompletion will apply to partial usernames. Defaults to True"
    },
    "GOOGLE_LOGIN_CONFIG": {
      "required": ["CLIENT_ID", "CLIENT_SECRET"],
      "type": ["object", "null"],
      "description": "Configuration for using Google for external authentication",
      "properties": {
        "CLIENT_SECRET": {
          "x-example": "e4a58ddd3d7408b7aec109e85564a0d153d3e846",
          "type": "string",
          "description": "The registered client secret for this Quay instance"
        },
        "CLIENT_ID": {
          "x-example": "0e8dbe15c4c7630b6780",
          "type": "string",
          "description": "The registered client ID for this Quay instance"
        }
      }
    },
    "GITHUB_LOGIN_CONFIG": {
      "properties": {
        "ALLOWED_ORGANIZATIONS": {
          "uniqueItems": true,
          "items": { "type": "string" },
          "type": "array",
          "description": "The names of the GitHub (Enterprise) organizations whitelisted to work with the ORG_RESTRICT option"
        },
        "ORG_RESTRICT": {
          "x-example": true,
          "type": "boolean",
          "description": "If true, only users within the organization whitelist can login using this provider"
        },
        "API_ENDPOINT": {
          "x-example": "https://api.github.com/",
          "type": "string",
          "description": "The endpoint of the GitHub (Enterprise) API to use. Must be overridden for github.com"
        },
        "GITHUB_ENDPOINT": {
          "x-example": "https://github.com/",
          "type": "string",
          "description": "The endpoint of the GitHub (Enterprise) being hit"
        },
        "CLIENT_ID": {
          "x-example": "0e8dbe15c4c7630b6780",
          "type": "string",
          "description": "The registered client ID for this Quay instance; cannot be shared with GITHUB_TRIGGER_CONFIG",
          "x-reference": "https://coreos.com/quay-enterprise/docs/latest/github-app.html"
        },
        "CLIENT_SECRET": {
          "x-example": "e4a58ddd3d7408b7aec109e85564a0d153d3e846",
          "type": "string",
          "description": "The registered client secret for this Quay instance",
          "x-reference": "https://coreos.com/quay-enterprise/docs/latest/github-app.html"
        }
      },
      "required": ["CLIENT_ID", "CLIENT_SECRET"],
      "type": ["object", "null"],
      "description": "Configuration for using GitHub (Enterprise) as an external login provider",
      "x-reference": "https://coreos.com/quay-enterprise/docs/latest/github-auth.html"
    },
    "FEATURE_CHANGE_TAG_EXPIRATION": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether users and organizations are allowed to change the tag expiration for tags in their namespace. Defaults to True."
    },
    "MAIL_SERVER": {
      "x-example": "smtp.somedomain.com",
      "type": "string",
      "description": "The SMTP server to use for sending e-mails. Only required if FEATURE_MAILING is set to true."
    },
    "LOG_ARCHIVE_LOCATION": {
      "x-example": "s3_us_east",
      "type": "string",
      "description": "If builds are enabled, the storage engine in which to place the archived build logs."
    },
    "HEALTH_CHECKER": {
      "x-example": [
        "RDSAwareHealthCheck",
        { "access_key": "foo", "secret_key": "bar" }
      ],
      "description": "The configured health check."
    },

    "BUILDLOGS_REDIS": {
      "required": ["host"],
      "type": "object",
      "description": "Connection information for Redis for build logs caching",
      "properties": {
        "host": {
          "x-example": "my.redis.cluster",
          "type": "string",
          "description": "The hostname at which Redis is accessible"
        },
        "password": {
          "x-example": "mypassword",
          "type": "string",
          "description": "The password to connect to the Redis instance"
        },
        "port": {
          "x-example": 1234,
          "type": "number",
          "description": "The port at which Redis is accessible"
        }
      }
    },
    "REPO_MIRROR_SERVER_HOSTNAME": {
      "x-example": "openshift-quay-service",
      "type": "string",
      "description": "Replaces the SERVER_HOSTNAME as the destination for mirroring. Defaults to unset"
    },
    "DIRECT_OAUTH_CLIENTID_WHITELIST": {
      "uniqueItems": true,
      "items": { "type": "string" },
      "type": "array",
      "description": "A list of client IDs of *Quay-managed* applications that are allowed to perform direct OAuth approval without user approval.",
      "x-reference": "https://coreos.com/quay-enterprise/docs/latest/direct-oauth.html"
    },
    "SSL_CIPHERS": {
      "x-example": ["CAMELLIA", "!3DES"],
      "type": "array",
      "description": "If specified, the nginx-defined list of SSL ciphers to enabled and disabled",
      "x-reference": "http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_ciphers"
    },
    "FEATURE_GITLAB_BUILD": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether to support GitLab build triggers. Defaults to False"
    },
    "DEFAULT_TAG_EXPIRATION": {
      "pattern": "^[0-9]+(w|m|d|h|s)$",
      "type": "string",
      "description": "The default, configurable tag expiration time for time machine. Defaults to `2w`."
    },
    "FEATURE_RATE_LIMITS": {
      "x-example": true,
      "type": "boolean",
      "description": "Whether to enable rate limits on API and registry endpoints. Defaults to False"
    },
    "PUBLIC_NAMESPACES": {
      "uniqueItems": true,
      "items": { "type": "string" },
      "type": "array",
      "description": "If a namespace is defined in the public namespace list, then it will appear on *all* user's repository list pages, regardless of whether that user is a member of the namespace. Typically, this is used by an enterprise customer in configuring a set of \"well-known\" namespaces."
    },
    "FEATURE_READONLY_APP_REGISTRY": {
      "x-example": true,
      "type": "boolean",
      "description": "Whether to App repositories are read-only. Defaults to False"
    },
    "USER_EVENTS_REDIS": {
      "required": ["host"],
      "type": "object",
      "description": "Connection information for Redis for user event handling",
      "properties": {
        "host": {
          "x-example": "my.redis.cluster",
          "type": "string",
          "description": "The hostname at which Redis is accessible"
        },
        "password": {
          "x-example": "mypassword",
          "type": "string",
          "description": "The password to connect to the Redis instance"
        },
        "port": {
          "x-example": 1234,
          "type": "number",
          "description": "The port at which Redis is accessible"
        }
      }
    }
  }
}
