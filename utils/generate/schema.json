{
  "type": "object",
  "description": "Schema for Quay configuration",
  "properties": {
    "FEATURE_DIRECT_LOGIN": {
      "x-example": true,
      "type": "boolean",
      "description": "Whether users can directly login to the UI. Defaults to True",
      "ct-default": "true",
      "ct-validate": "",
      "ct-fieldgroups": {
        "AccessSettings": {
          "ct-validate": "required_without_all=FeatureGithubLogin FeatureGoogleLogin"
        }
      }
    },
    "FEATURE_GITHUB_LOGIN": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether GitHub login is supported. Defaults to False",
      "ct-default": "false",
      "ct-validate": "",
      "ct-fieldgroups": {
        "AccessSettings": {
          "ct-validate": "required_without_all=FeatureDirectLogin FeatureGoogleLogin"
        }
      }
    },
    "FEATURE_GOOGLE_LOGIN": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether Google login is supported. Defaults to False",
      "ct-default": "false",
      "ct-validate": "",
      "ct-fieldgroups": {
        "AccessSettings": {
          "ct-validate": "required_without_all=FeatureDirectLogin FeatureGithubLogin"
        }
      }
    },
    "FEATURE_USER_CREATION": {
      "x-example": true,
      "type": "boolean",
      "description": "Whether users can be created (by non-super users). Defaults to True",
      "ct-default": "true",
      "ct-validate": "",
      "ct-fieldgroups": {
        "AccessSettings": {
          "ct-validate": "required_with=FeatureInviteOnlyUserCreation"
        }
      }
    },
    "FEATURE_INVITE_ONLY_USER_CREATION": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether users being created must be invited by another user. Defaults to False",
      "ct-default": "false",
      "ct-validate": "",
      "ct-fieldgroups": {
        "AccessSettings": {
          "ct-validate": ""
        }
      }
    },
    "FEATURE_ACTION_LOG_ROTATION": {
      "x-example": false,
      "type": "boolean",
      "description": "Whether or not to rotate old action logs to storage. Defaults to False",
      "ct-default": "false",
      "ct-validate": "",
      "ct-fieldgroups": {
        "ActionLogArchiving": {
          "ct-validate": ""
        }
      }
    },
    "ACTION_LOG_ARCHIVE_PATH": {
      "x-example": "archives/actionlogs",
      "type": "string",
      "description": "If action log archiving is enabled, the path in storage in which to place the archived data.",
      "ct-default": "",
      "ct-validate": "",
      "ct-fieldgroups": {
        "ActionLogArchiving": {
          "ct-validate": "required_with=FeatureActionLogRotation"
        }
      }
    },
    "ACTION_LOG_ARCHIVE_LOCATION": {
      "x-example": "s3_us_east",
      "type": "string",
      "description": "If action log archiving is enabled, the storage engine in which to place the archived data.",
      "ct-default": "",
      "ct-validate": "",
      "ct-fieldgroups": {
        "ActionLogArchiving": {
          "ct-validate": "required_with=FeatureActionLogRotation,omitempty,customValidateFoundInStorage"
        }
      }
    },
    "DISTRIBUTED_STORAGE_CONFIG": {
      "x-example": {
        "local_storage": ["LocalStorage", { "storage_path": "some/path/" }]
      },
      "type": "object",
      "description": "Configuration for storage engine(s) to use in Quay. Each key is a unique ID for a storage engine, with the value being a tuple of the type and  configuration for that engine.",
      "patternProperties": {
        "^.*$": {
          "type": "array"
        }
      },
      "ct-default": "",
      "ct-validate": "",
      "ct-fieldgroups": {
        "ActionLogArchiving": {
          "ct-validate": ""
        }
      }
    },
    "REGISTRY_TITLE": {
      "x-example": "Corp Container Service",
      "type": "string",
      "description": "If specified, the long-form title for the registry. Defaults to `Red Hat Quay`.",
      "ct-default": "Project Quay",
      "ct-validate": "",
      "ct-fieldgroups": {
        "UserVisibleSettings": {
          "ct-validate": ""
        }
      }
    },
    "REGISTRY_TITLE_SHORT": {
      "x-example": "CCS",
      "type": "string",
      "description": "If specified, the short-form title for the registry. Defaults to `Red Hat Quay`.",
      "ct-default": "Project Quay",
      "ct-validate": "",
      "ct-fieldgroups": {
        "UserVisibleSettings": {
          "ct-validate": ""
        }
      }
    },
    "SEARCH_RESULTS_PER_PAGE": {
      "x-example": 10,
      "type": "number",
      "description": "Number of results returned per page by search page. Defaults to 10",
      "ct-default": "10",
      "ct-validate": "",
      "ct-fieldgroups": {
        "UserVisibleSettings": {
          "ct-validate": ""
        }
      }
    },
    "SEARCH_MAX_RESULT_PAGE_COUNT": {
      "x-example": 10,
      "type": "number",
      "description": "Maximum number of pages the user can paginate in search before they are limited. Defaults to 10",
      "ct-default": "10",
      "ct-validate": "",
      "ct-fieldgroups": {
        "UserVisibleSettings": {
          "ct-validate": ""
        }
      }
    },
    "CONTACT_INFO": {
      "type": "array",
      "description": "If specified, contact information to display on the contact page. If only a single piece of contact information is specified, the contact footer will link directly.",
      "uniqueItems": true,
      "items": [
        {
          "pattern": "^mailto:(.)+$",
          "type": "string",
          "description": "Adds a link to send an e-mail",
          "x-example": "mailto:support@quay.io"
        },
        {
          "pattern": "^irc://(.)+$",
          "type": "string",
          "description": "Adds a link to visit an IRC chat room",
          "x-example": "irc://chat.freenode.net:6665/quay"
        },
        {
          "pattern": "^tel:(.)+$",
          "type": "string",
          "description": "Adds a link to call a phone number",
          "x-example": "tel:+1-888-930-3475"
        },
        {
          "pattern": "^http(s)?://(.)+$",
          "type": "string",
          "description": "Adds a link to a defined URL",
          "x-example": "https://twitter.com/quayio"
        }
      ],
      "ct-default": "[]",
      "ct-validate": "",
      "ct-fieldgroups": {
        "UserVisibleSettings": {
          "ct-validate": ""
        }
      }
    },
    "AVATAR_KIND": {
      "enum": ["local", "gravatar"],
      "type": "string",
      "description": "The types of avatars to display, either generated inline (local) or Gravatar (gravatar)",
      "ct-default": "local",
      "ct-validate": "",
      "ct-fieldgroups": {
        "UserVisibleSettings": {
          "ct-validate": "oneof=local gravatar"
        }
      }
    },
    "BRANDING": {
      "required": ["logo"],
      "type": "object",
      "description": "Custom branding for logos and URLs in the Quay UI",
      "properties": {
        "logo": {
          "x-example": "/static/img/quay-horizontal-color.svg",
          "type": "string",
          "description": "Main logo image URL",
          "ct-default": "/static/img/quay-horizontal-color.svg",
          "ct-validate": "url"
        },
        "footer_img": {
          "x-example": "/static/img/RedHat.svg",
          "type": "string",
          "description": "Logo for UI footer",
          "ct-default": "",
          "ct-validate": "url"
        },
        "footer_url": {
          "x-example": "https://redhat.com",
          "type": "string",
          "description": "Link for footer image",
          "ct-default": "",
          "ct-validate": "url"
        }
      },
      "ct-default": "",
      "ct-validate": "",
      "ct-fieldgroups": {
        "UserVisibleSettings": {}
      }
    },
    "DOCUMENTATION_ROOT": {
      "type": "string",
      "description": "Root URL for documentation links",
      "ct-default": "",
      "ct-validate": "",
      "ct-fieldgroups": {
        "Documentation": {}
      }
    },
    "FEATURE_TEAM_SYNCING": {
      "x-example": true,
      "type": "boolean",
      "description": "Whether to allow for team membership to be synced from a backing group in the authentication engine (LDAP or Keystone)",
      "ct-default": "false",
      "ct-validate": "",
      "ct-fieldgroups": {
        "TeamSyncing": {}
      }
    },
    "FEATURE_NONSUPERUSER_TEAM_SYNCING_SETUP": {
      "x-example": true,
      "type": "boolean",
      "description": "If enabled, non-superusers can setup syncing on teams to backing LDAP or Keystone. Defaults To False.",
      "ct-default": "false",
      "ct-validate": "",
      "ct-fieldgroups": {
        "TeamSyncing": {}
      }
    },
    "TEAM_RESYNC_STALE_TIME": {
      "x-example": "2h",
      "type": "string",
      "description": "If team syncing is enabled for a team, how often to check its membership and resync if necessary (Default: 30m)",
      "pattern": "^[0-9]+(w|m|d|h|s)$",
      "ct-default": "30m",
      "ct-validate": "customValidateTimePattern",
      "ct-fieldgroups": {
        "TeamSyncing": {}
      }
    }
  }
}
